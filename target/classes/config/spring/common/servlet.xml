<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

  <!-- Annotation Driven -->
  <mvc:annotation-driven conversion-service="conversionService" validator="validator" />
  
  <!-- conversion -->
  <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

  <!-- Validator -->
  <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

  <bean id="jacksonMessageConverter"
    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
  <bean
    class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="messageConverters">
      <list>
        <ref bean="jacksonMessageConverter" />
      </list>
    </property>
  </bean>

  <!-- tiles3 layout config -->
<!--   <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    <property name="definitions">
      <list>
        <value>classpath:/config/tiles/tiles3.xml</value>
      </list>
    </property>
  </bean> -->

  <!-- RESTful setting config -->
  <mvc:default-servlet-handler />

  <!-- Auto-detecting components -->
  <context:component-scan base-package="com.inno.odag" use-default-filters="false">
    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>


  <!-- Resources -->
  <mvc:resources mapping="/resources/**" location="/resources/" />

  <!-- Handler -->
  <bean
    class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="cacheSeconds" value="0" />
    <!-- <property name="alwaysUseFullPath" value="true" /> <property name="webBindingInitializer"> 
      <bean class="com.innogrid.abp.web.binder.CustomWebBindingInitializer"></bean> 
      </property> -->
  </bean>

  <!-- Bean Name URL Handler mapping definition for "/**/" invoker -->
  <bean
    class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

  <!-- Download -->
  <!-- <bean id="downloadView" class="com.innogrid.abp.web.view.DownloadView" 
    /> -->

  <bean id="jsonView"  class="net.sf.json.spring.web.servlet.view.JsonView" />

  <!-- Multipart resolver -->
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize">
      <value>1000000000</value>
    </property>
  </bean>

  <bean class="org.springframework.beans.MutablePropertyValues" />

  <!-- Exception Resolver -->
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="java.lang.Exception">
          error/exception
        </prop>
      </props>
    </property>
  </bean>

  <!-- view name tanslator -->
  <bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />

  <!-- view resolver -->
  <bean
    class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="contentNegotiationManager">
      <bean
        class="org.springframework.web.accept.ContentNegotiationManager">
        <constructor-arg>
          <bean
            class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
            <constructor-arg>
              <map>
                <entry key="atom" value="application/atom+xml; charset=utf-8" />
                <entry key="xml" value="application/xml; charset=utf-8" />
                <entry key="json" value="application/json; charset=utf-8" />
                <entry key="htm" value="text/html; charset=utf-8" />
              </map>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </property>
    <property name="viewResolvers">
      <list>
        <bean
          class="org.springframework.web.servlet.view.BeanNameViewResolver">
          <property name="order" value="0"></property>
        </bean>
<!--         <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
          <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
          <property name="order" value="1" />
        </bean> -->
        <bean
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
          <property name="exposeContextBeansAsAttributes" value="true" />
          <property name="prefix" value="/WEB-INF/views/" />
          <property name="suffix" value=".jsp" />
          <property name="order" value="1"></property>
        </bean>
      </list>
    </property>
    <property name="defaultViews">
      <list>
        <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
          <property name="prefixJson" value="true" />
        </bean>
      </list>
    </property>
  </bean>
</beans>